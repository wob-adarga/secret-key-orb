description: >
  This command sets up a provided key or keys for git usage if
  provided. Keys should be passed in base64 encoded. The email address
  obtained from a gpg import will be stored as GIT_EMAIL in the bash
  context.
parameters:
  ssh-key:
    type: string
    default: ""
  ssh-cert:
    type: string
    default: ""
  gpg-key:
    type: string
    default: ""
steps:
  - when:
      condition: "<<parameters.gpg-key>>"
      steps:
        - run:
            name: Configure git gpg signing
            command: |
              echo <<parameters.gpg-key>> | base64 -d > /tmp/gpg.key
              gpg --import /tmp/gpg.key 2>&1| tee /tmp/gpg.import.out
              GIT_EMAIL=$(sed -nEe '/imported/ s/.*<(.*)>.*/\1/p' /tmp/gpg.import.out)
              echo "export GIT_EMAIL=${GIT_EMAIL}" >> $BASH_ENV
              git config --global user.email "$GIT_EMAIL"
              git config --global commit.gpgsign true
  - when:
      condition:
        and:
          - "<<parameters.ssh-key>>"
          - "<<parameters.ssh-cert>>"
      steps:
        - run:
            name: Configure git ssh key
            # unset sock auth as we will only use this key and not any of those cci
            # adds to the agent
            command: |
              echo "unset SSH_AUTH_SOCK" >> $BASH_ENV
              mkdir -p ~/.ssh && chmod 700 ~/.ssh
              echo <<parameters.ssh-key>> | base64 -d > ~/.ssh/id_git
              echo <<parameters.ssh-cert>> | base64 -d > ~/.ssh/id_git-cert.pub
              chmod 600 ~/.ssh/id_git ~/.ssh/id_git-cert.pub
              echo "export GIT_SSH_COMMAND='ssh -i $HOME/.ssh/id_git'" >> $BASH_ENV
